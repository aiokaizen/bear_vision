version: '3.8'
services:
  db:
    image: postgres:15.3-alpine3.18
    restart: unless-stopped
    ports:
      - 5437:5432
    environment:
      POSTGRES_PASSWORD: postgres_pass
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgres/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql # Mount the script
    container_name: postgres_container
    healthcheck:
      # test: ["CMD-SHELL", "pg_isready -U postgres"]  # Check if Postgres is ready
      test: ["CMD-SHELL", "psql -U postgres -d postgres -c \"SELECT 1 FROM pg_database WHERE datname='bear_vision';\""] # Check if a database if created
      interval: 10s    # Check every 10 seconds
      timeout: 5s     # Time out after 5 seconds
      retries: 5      # Try 5 times before failing

  django:
    build:
      context: .
      dockerfile: Dockerfile.postgres_db
    depends_on:
      db:
        condition: service_healthy  # Only start when the db is healthy
    ports:
      - "8001:8000"
    env_file:
      - .env
    volumes:
      - static:/bear_vision/static
      - media:/bear_vision/media
    container_name: bear_vision_container

  # Lightweight web application for managing Database servers
  adminer:
    image: adminer:latest
    restart: unless-stopped
    ports:
      - 8080:8080
    container_name: adminer_container

volumes:
  db_data:
  static:
  media:
